
<!-- include header -->
<%- include('include/_header') %>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- /include header -->

<!-- Main Site -->
<section class="home-text">
    <div class="home-text-left">
        <div class="home-text-overlay"></div> <!-- Div para opacar la imagen de fondo -->
        <div class="home-text-wrapper">
            <h1>Bienvenido a nuestro sitio de orientación vocacional</h1>
            <p>Encuentra la carrera que mejor se adapte a tus habilidades, intereses y aptitudes.</p>
            <a href="" class="button">Empezar ahora</a>
        </div>
    </div>            
</section>
<section class="home-content">
    <article>
        <h2>¿Por qué es importante hacer el test de vocación?</h2>
        <p>Hacer un test de vocación te permite conocerte mejor a ti mismo, descubrir tus intereses, habilidades y aptitudes. Esto te ayudará a tomar una decisión más informada a la hora de elegir una carrera universitaria o técnica.</p>
        <p>Además, hacer un test de vocación te permitirá:</p>
        <ul>
            <li>Identificar carreras que quizás no conocías o no habías considerado previamente.</li>
            <li>Descartar carreras que no se ajustan a tus habilidades o intereses.</li>
            <li>Conocer los requisitos de ingreso y las habilidades necesarias para cada carrera.</li>
            <li>Conocer el campo laboral de cada carrera y sus posibilidades de desarrollo profesional.</li>
        </ul>
        <p>Recuerda que elegir una carrera es una decisión importante y que debe ser tomada con responsabilidad. Un test de vocación es una herramienta útil para ayudarte en este proceso, pero siempre debes complementarla con información adicional y asesoramiento profesional si es necesario.</p>
        <p>Nuestro test vocacional está diseñado específicamente para estudiantes en Ecuador y se ajusta a las carreras universitarias y técnicas disponibles en el país.</p>
    </article>
</section>


<div class="registration-form-container" style="display: none;">
  <button class="close-button"></button> 
  <h4>Regístrate para realizar el test vocacional</h4>
  <form id="registration-form" action="/register" method="POST">
    <div class="mb-3">
      <label for="name" class="form-label">Nombre Completo:</label>
      <input type="text" class="form-control" id="name" name="name" required>
    </div>
    <div class="mb-3">
      <label for="age" class="form-label">Edad:</label>
      <input type="number" class="form-control" id="age" name="age" required>
    </div>
    <div class="mb-3">
      <label for="email" class="form-label">Correo electrónico:</label>
      <input type="email" class="form-control" id="email" name="email" required>
    </div>
    <div class="mb-3">
      <label for="gender" class="form-label">Género:</label>
      <select class="form-select" id="gender" name="gender" required>
        <option value="">Seleccionar género</option>
        <option value="Femenino">Femenino</option>
        <option value="Masculino">Masculino</option>
      </select>
    </div>
    <div class="form-group">
      <label for="province" class="form-label">Provincia</label>
      <select id="province" name="province" class="form-control">
        <option value="" disabled selected>Selecciona una provincia</option>
      </select>
    </div>
    
    <div class="form-group">
      <label for="location" class="form-label">Ciudad</label>
      <select id="location" name="location" class="form-control">
        <option value="" disabled selected>Selecciona una ciudad</option>
      </select>
    </div>
    
    <div class="form-group text-center">
      <button type="submit" class="btn btn-primary register-button">Registrarse</button>
    </div>
    
  </form>
  
</div>


<!-- /Main Site -->
<script>
    $(document).ready(function() {
    // Al hacer clic en el botón "Empezar ahora"
    $('.button').click(function(e) {
      e.preventDefault();
      // Muestra el contenedor del formulario de registro en una ventana emergente
      $('.registration-form-container').show();
    });
  
    // Al enviar el formulario de registro
    $('#registration-form').submit(function(e) {
      e.preventDefault();
      // Envía los datos del formulario al servidor usando AJAX
      $.ajax({
        url: '/register',
        method: 'POST',
        data: $(this).serialize(),
        success: function(response) {
          // Redirige al usuario a la página del test vocacional con el nombre del usuario
          window.location.href = `/test?name=${$('#name').val()}`;
        },
        error: function(err) {
          console.log('Error registering user:', err);
          alert('Error registering user. Please try again.');
        }
      });
    });
  
    var popUp = document.querySelector('.registration-form-container');
    var closeBtn = document.querySelector('.close-button');
  
    $('.button').click(function() {
      popUp.style.display = 'block';
    });
  
    closeBtn.addEventListener('click', function() {
      popUp.style.display = 'none';
    });
  });
  
</script>

<script>
  const provinciaSelect = document.getElementById('province');
  const ciudadSelect = document.getElementById('location');

  // Función para obtener las provincias desde el servidor
  async function obtenerProvincias() {
    try {
      const response = await fetch('/api/provincias');
      const provincias = await response.json();

      // Agregar las opciones al select de provincias
      provincias.forEach(provincia => {
        const option = document.createElement('option');
        option.value = provincia;
        option.textContent = provincia;
        provinciaSelect.appendChild(option);
      });

      // Llamar a la función para cargar las ciudades según la provincia seleccionada inicialmente
      actualizarCiudades();
    } catch (error) {
      console.error('Error al obtener las provincias:', error);
    }
  }

  // Función para obtener las ciudades de una provincia desde el servidor
  async function obtenerCiudades() {
    try {
      const provinciaSeleccionada = provinciaSelect.value;
      const response = await fetch(`/api/ciudades/${provinciaSeleccionada}`);
      const ciudades = await response.json();

      // Eliminar las opciones anteriores del select de ciudades
      while (ciudadSelect.firstChild) {
        ciudadSelect.removeChild(ciudadSelect.firstChild);
      }

      // Agregar las nuevas opciones al select de ciudades
      ciudades.forEach(ciudad => {
        const option = document.createElement('option');
        option.value = ciudad;
        option.textContent = ciudad;
        ciudadSelect.appendChild(option);
      });
    } catch (error) {
      console.error('Error al obtener las ciudades:', error);
    }
  }

  // Función para actualizar las ciudades según la provincia seleccionada
  function actualizarCiudades() {
    obtenerCiudades();
  }

  // Llamar a la función para obtener las provincias desde el servidor
  obtenerProvincias();

  // Escuchar el evento de cambio en el campo de provincia
  provinciaSelect.addEventListener('change', actualizarCiudades);

</script>


<!-- include footer -->
<%- include('include/_footer') %>
<!-- /include footer -->